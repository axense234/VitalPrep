@use "../../abstracts" as *;

.viewEntityOptionsContainer {
  @include flexCenter(row);
  width: 100%;
  padding: 2.5rem;
  justify-content: space-evenly;
  gap: 1rem;
  background-color: getColorWithOpacity("secondary-color-3.1", 0.8);
  border-bottom: 1.5px solid getColor("black-75-1");

  @media screen and (max-width: 1650px) {
    flex-wrap: wrap;
    row-gap: 2rem;
  }

  @media screen and (max-width: 800px) {
    padding: 2.5rem 1.25rem;
  }

  @media screen and (max-width: 600px) {
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  label {
    @include heading("h6", "laptop", "black");
    font-weight: 550;

    @media screen and (max-width: 1200px) {
      @include heading("h6", "tablet", "black");
    }

    @media screen and (max-width: 600px) {
      @include heading("h6", "phone", "black");
    }
  }

  select {
    @include flexCenter(row);
    @include heading("h6", "tablet", "black");
    font-weight: 550;
    border: 1.5px solid getColor("black-75-1");
    background-color: getColor("tan-color");
    padding: 0.5rem 2.5rem;
    border-radius: 10px;
    appearance: none;

    @media screen and (max-width: 1200px) {
      @include heading("h6", "phone", "black");
      background-color: getColor("tan-color");
    }

    @media screen and (max-width: 600px) {
      @include paragraph("tablet", "black");
      width: 100%;
      font-weight: 550;
      padding: 0.35rem 1.75rem;
    }
  }
}

.chooseEntityOptionContainer {
  @include flexCenter(row);
  justify-content: flex-start;
  gap: 0.5rem;

  @media screen and (max-width: 600px) {
    align-items: flex-start;
    width: 80%;
    flex-direction: column;
  }
}

.sortByEntityPropertyContainer {
  @include flexCenter(row);
  justify-content: flex-start;
  gap: 0.5rem;

  @media screen and (max-width: 600px) {
    align-items: flex-start;

    flex-direction: column;
    width: 80%;
  }

  button {
    @include flexCenter(row);
    font-size: 2rem;
    background-color: inherit;
    border: none;
    transition: $crispyTransformTransition;

    @media screen and (max-width: 600px) {
      font-size: 1.25rem;
    }
  }
}

.searchEntityContainer {
  @include flexCenter(row);
  justify-content: flex-start;
  gap: 0.5rem;

  @media screen and (max-width: 600px) {
    flex-direction: column;
    width: 80%;
    align-items: flex-start;
  }

  input {
    background-color: getColor("tan-color");
    border: 1.5px solid getColor("black-75-1");
    border-radius: 10px;

    width: 100%;
    max-width: 40rem;
    height: 2.5rem;

    font-size: 1rem;
    padding: 0.5rem;
    font-weight: 550;

    word-wrap: break-word;
    transition: background-color 0.135s linear;

    &:hover {
      background-color: getColor("tan-color-dark");
    }
    @media screen and (max-width: 600px) {
      height: 2rem;
    }
  }
}

.searchEntityInputContainer {
  @include flexCenter(row);

  @media screen and (max-width: 600px) {
    width: 100%;
  }

  svg {
    font-size: 2rem;
    margin-left: -2.5rem;
    transition: $crispyTransformTransition;

    &:hover {
      transform: scale(1.1);
    }

    @media screen and (max-width: 600px) {
      font-size: 1.25rem;
      margin-left: -1.5rem;
    }
  }
}

.entityViewTypeContainer {
  @include flexCenter(row);
  justify-content: center;
  gap: 0.25rem;

  @media screen and (max-width: 600px) {
    align-items: center;
    justify-content: flex-start;
    width: 80%;
  }

  svg {
    font-size: 2.5rem;
    transition: $crispyTransformTransition;

    &:hover {
      transform: scale(1.1);
    }
    &:nth-of-type(2) {
      font-size: 2rem;

      @media screen and (max-width: 600px) {
        font-size: 2.2rem;
      }
    }

    @media screen and (max-width: 600px) {
      font-size: 3rem;
    }
  }
}

.sortByEntityPropertyContainerOrder {
  @include flexCenter(row);
  gap: 0.5rem;
}
